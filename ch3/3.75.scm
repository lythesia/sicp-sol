(define (sign-change-detector now last)
  (cond
    ((and (< last 0) (> now 0)) 1)
    ((and (> last 0) (< now 0)) -1)
    (else 0)
  )
)
(define (make-zero-crossings input-stream last-value last-avg)
  (let ((avg (/ (+ (stream-car input-stream) last-value) 2)))
    (cons-stream
      (sign-change-detector avg last-value)
      (make-zero-crossings (stream-cdr input-stream) (stream-car input-stream) avg)
    )
  )
)
